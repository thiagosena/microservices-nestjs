version: '3.8'
services:
  app-admin:
    build: ./admin
    command: 'npm run start:dev'
    container_name: admin-nestjs
    environment:
      - CHOCKIDAR_USEPOLLING=true
    ports:
      - 8001:8001
    volumes:
      - ./admin/:/home/node/app
  app-main:
    build: ./main
    command: 'npm run start:dev'
    container_name: main-nestjs
    environment:
      - CHOCKIDAR_USEPOLLING=true
    ports:
      - 8002:8002
    volumes:
      - ./main/:/home/node/app
  amqp-admin:
    build: ./admin
    command: 'npm run listen'
    container_name: amqp-admin-nestjs
    environment:
      - CHOCKIDAR_USEPOLLING=true
    volumes:
      - ./admin/:/home/node/app
  amqp-main:
    build: ./main
    command: 'npm run listen'
    container_name: amqp-main-nestjs
    environment:
      - CHOCKIDAR_USEPOLLING=true
    volumes:
      - ./main/:/home/node/app
  postgres:
    image: postgres
    container_name: postgres-nestjs
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-admin}
      POSTGRES_DB: nestjs
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - 5434:5432
    restart: unless-stopped

  mongodb:
    image: mongo
    container_name: mongodb-nestjs
    restart: unless-stopped
    command: mongod --auth
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_INITDB_DATABASE: nestjs_main
    ports:
      - 27057:27017
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - mongodb:/data/db

  rabbitmq:
    image: rabbitmq:3.8.18-management-alpine
    container_name: rabbitmq-nestjs
    volumes:
      - ./.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ./.docker-conf/rabbitmq/logs/:/var/log/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-admin}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS:-admin}
    ports:
      - 5672:5672 #amqp
      - 15672:15672 #http
      - 15692:15692 #prometheus
    healthcheck:
      test: ['CMD', 'rabbitmqctl', 'status']
      interval: 5s
      timeout: 20s
      retries: 5

volumes:
  postgres:
  mongodb:
